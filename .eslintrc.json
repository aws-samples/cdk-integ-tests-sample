{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "2020",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "env": {
    "jest": true,
    "node": true
  },
  "plugins": [
    "@typescript-eslint",
    "awscdk",
    "import",
    "jest"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:awscdk/all",
    "plugin:jest/recommended"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts"]
      },
      "typescript": {
        "directory": "./tsconfig.json"
      }
    }
  },
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts"
  ],
  "rules": {
    "@typescript-eslint/no-require-imports": [
      "error"
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "ignoreComments": false
      }
    ],
    "eol-last": ["error", "always"],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": false
      }
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "arrow-spacing": [
      "error", 
      {
        "before": true,
        "after": true
      }
    ],
    "array-bracket-newline": [
      "error",
      "consistent"
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-curly-newline": [
      "error",
      {
        "multiline": true,
        "consistent": true
      }
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "keyword-spacing": [
      "error"
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "space-before-blocks": "error",
    "curly": [
      "error",
      "multi-line",
      "consistent"
    ],
    "import/no-unresolved": [
      "error",
      {
        "ignore": [
          "aws-lambda"
        ]
      }
    ],
    "no-duplicate-imports": [
      "error"
    ],
    "no-shadow": [
      "off"
    ],
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "semi": [
      "error",
      "always"
    ],
    "key-spacing": [
      "error"
    ],
    "@typescript-eslint/no-unused-vars": ["error"],
    "no-multiple-empty-lines": [
      "error"
    ],
    "max-len": [
      "error",
      {
        "code": 150,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error"
    ],
    "no-return-await": "off",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/type-annotation-spacing": [
      "error"
    ],
    "no-trailing-spaces": [
      "error"
    ],
    "dot-notation": [
      "error"
    ],
    "no-bitwise": [
      "error"
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "enumMember",
        "format": [
          "PascalCase",
          "UPPER_CASE"
        ]
      },
      {
        "selector": "variableLike",
        "format": [
          "camelCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "format": [
          "camelCase",
          "PascalCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "allow"
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method"
        ]
      }
    ],
    "jest/expect-expect": "off",
    "jest/no-conditional-expect": "off",
    "jest/no-done-callback": "off",
    "jest/no-standalone-expect": "off",
    "jest/valid-expect": "off",
    "jest/valid-title": "off"
  }
}